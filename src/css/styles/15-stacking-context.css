@import '/src/common/best-reset.css';
@import '/src/common/theme.css';
@import '/src/ui/components/avatar/avatar.css';

/* Stacking context */

body {
  margin: 50px;
}

h1 {
  margin-block: 20px;
}

.case-01 {
  background: var(--pastel-apricot);
  display: flex;
  flex-flow: row nowrap;

  /* inline-block은 공백문자가 포함되어 있어서 사이 간격이 생김 */

  button {
    margin-right: -20px;
    position: static;
    /* filter: blur(2px); */

    transition: rotate 2s;
    /* 맨 앞에 변환시키고 싶은 프로퍼티가 와야함, */

    &:hover,
    &:focus {
      /* 순서를 제어하기 위해 사용, 포지션없이도 쌓임맥락이 가능한 속성들이 이용이 가능! */
      z-index: 10;
      /* opacity: 0.8; */
      transform: scale(1.5) translate(0 -20px);
      /* transform: translate(0, -20px); */
      /* transform의 속성의 함수로만 쓰던것들이 개별속성으로 사용이 가능함 */
      /* translate: 0 -20px; */
      rotate: 3turn;
      filter: sepia(60%);
    }

    &::after {
      display: none;
    }
  }
}

.case-02{
  margin-block-start: 20px;
  display: flex;
  gap: 20px;

  [class^="area"]{
    inline-size: 100px;
    block-size: 100px;
    border: 1px solid currentColor;
    text-align: center;
    align-content: center;
    background: var(--pastel-lavender);
    /* transition-property: background, border-radius;
    transition-duration: 1s, 0.5s;
    transition-delay: 0s, 0.5s;
    transition-timing-function: ease; */
    /* transition: background 2s 0s ease, border-raius 1s 2s ease; */
    transition: all 2s;

    &:hover{
      background: var(--pastel-orange);
      border-radius: 50%;
      rotate: 2turn;
    }
  }



}